#!/bin/sh
set -e

DTB_SRC="/usr/src/rockpi-penta/rk3588-pwm14-fan.dts"
DTB2_SRC="/usr/src/rockpi-penta/rk3588-pwm-fan.dts"
BUILTIN="/boot/dtb/rockchip/overlay/rk3588-pwm14-m1.dtbo"
ARM_ENV="/boot/armbianEnv.txt"

# 1. install overlays using armbian-add-overlay
armbian-add-overlay "$DTB_SRC"
armbian-add-overlay "$DTB2_SRC"
[ -f "$BUILTIN" ] && armbian-add-overlay "$BUILTIN"

# 2. ensure user_overlays line contains pwm-fan pwm14-fan pwm14-m1
if grep -q "^user_overlays=" "$ARM_ENV"; then
    current=$(grep "^user_overlays=" "$ARM_ENV" | cut -d= -f2-)
    clean=$(echo "$current" | tr ' ' '\n' | grep -vE '^(pwm-fan|pwm14-fan|pwm14-m1)$' | xargs)
    sed -i "s/^user_overlays=.*/user_overlays=$clean pwm-fan pwm14-fan pwm14-m1/" "$ARM_ENV"
else
    echo "user_overlays=pwm-fan pwm14-fan pwm14-m1" >>"$ARM_ENV"
fi

# 3. sync in case /boot is on SD
sync

# 4. set up the Python virtual environment
if [ ! -d /opt/rockpi-penta-venv ]; then
    python3 -m venv /opt/rockpi-penta-venv
fi
/opt/rockpi-penta-venv/bin/pip install -U pip
/opt/rockpi-penta-venv/bin/pip install /usr/src/rockpi-penta


case "$1" in
  configure|upgrade)
    systemctl daemon-reload
    systemctl enable --now rockpi-penta.service
    echo "rockpi-penta installed. View logs with: sudo journalctl -u rockpi-penta -f"
    ;;
esac



exit 0
